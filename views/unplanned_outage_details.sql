CREATE
OR REPLACE VIEW DM_DATASCIENCE.UNPLANNED_OUTAGE_DETAILS AS (
    WITH T AS (
        SELECT
            EVENT_IDX,
            ALIAS,
            SUBSTR (ALIAS, 8) LABELTEXT,
            DEVCLS_NAME,
            DISPLAY_NAME,
            BEGIN_TIME,
            RESTORE_TIME,
            CALL_TYPE,
            OPERATOR_COMMENT,
            ALARM_STATE,
            DEVCLS_NAME
        FROM
            OUTAGEMANAGEMENT.JOBS J
        WHERE
            (BEGIN_TIME >= TO_TIMESTAMP_NTZ('2021-02-26'))
            AND DEVCLS_NAME LIKE 'xfm%'
            AND STATUS != 12
            AND CALL_TYPE NOT IN ('SWP', 'PLAN')
    )
    SELECT
        'UNPLANNED' AS OUTAGETYPE,
        T.EVENT_IDX,
        T.BEGIN_TIME,
        T.RESTORE_TIME,
        TIMESTAMPDIFF(MINUTE, T.BEGIN_TIME, T.RESTORE_TIME) OUTAGE_LENGTH_MIN,
        A.CUSTOMER_COUNT CUSTCOUNT,
        (OUTAGE_LENGTH_MIN * CUSTCOUNT) AS CMI_MIN,
        A.BANK_OBJECTID,
        REPLACE(REPLACE (A.LABELTEXT, CHR(13), ''), CHR(10), ' ') LABELTEXT,
        A.FEEDERID,
        A.FEEDERNAME,
        A.XFMR_MAX_LOAD,
        A.XFMR_OVERLOAD_COUNT,
        TO_DATE(A.ETL_UPDATE_TIMESTAMP) OVERLOAD_REPORT_DATE,
        DATEDIFF(DAY, A.ETL_UPDATE_TIMESTAMP, T.BEGIN_TIME) CYCLE_TIME
    FROM
        DM_DATASCIENCE.OVERLOADED_TRANSFORMER_YEARLY_SNAPSHOT A
        INNER JOIN T ON T.LABELTEXT = A.LABELTEXT
        INNER JOIN (
            SELECT
                BANK_OBJECTID,
                REPLACE(REPLACE (LABELTEXT, CHR(13), ''), CHR(10), ' ') LABELTEXT,
                MIN(ETL_UPDATE_TIMESTAMP) MIN_ETL_UPDATE_TIMESTAMP
            FROM
                DM_DATASCIENCE.OVERLOADED_TRANSFORMER_YEARLY_SNAPSHOT
            WHERE
                XFMR_OVERLOAD_COUNT <> 0
            GROUP BY
                BANK_OBJECTID,
                LABELTEXT
        ) B ON A.BANK_OBJECTID = B.BANK_OBJECTID
        AND A.LABELTEXT = B.LABELTEXT
        AND A.ETL_UPDATE_TIMESTAMP = B.MIN_ETL_UPDATE_TIMESTAMP
    ORDER BY
        A.XFMR_OVERLOAD_COUNT DESC
);
